<BaseDialog DialogId="@id" @ref="baseDialogRef">
    <div class="dialog-content">
        <label class="confirm-action-label">Confirm your action</label>
        <p class="dialog-message">@dialogMessage</p>
        @if (!string.IsNullOrEmpty(errorMessage)) {
            <p class="error-message">@errorMessage</p>
        }
        <div class="dialog-buttons">
            <div class="cancel-btn" @onclick="Close">@CancelButtonText</div>
            <div class="confirm-btn" @onclick="ConfitmButtonClick">@ConfirmButtonText</div>
        </div>
    </div>
</BaseDialog>

@code {
    private string id;
    private BaseDialog baseDialogRef;
    private string
        dialogMessage,
        errorMessage;

    [Parameter] public string ConfirmButtonText { get; set; } = "Confirm";
    [Parameter] public string CancelButtonText { get; set; } = "Cancel";
    [Parameter] public Func<Task<Err>> ConfirmAction { get; set; }
    protected override void OnParametersSet() {
        id = Guid.NewGuid().ToString();
    }
    public async Task Close() => await baseDialogRef.CloseAsync();
    public async Task Open(string message) {
        dialogMessage = message;
        StateHasChanged();
        await baseDialogRef.OpenAsync();
    }
    public async void ConfitmButtonClick() {
        Err err = await ConfirmAction();
        if (err.NotNone()) {
            errorMessage = err.Message;
            StateHasChanged();
        }
        else { Close(); }

    }

}
