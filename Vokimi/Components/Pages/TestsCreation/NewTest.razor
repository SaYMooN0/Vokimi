@using Vokimi.Components.Pages.TestsCreation.test_cretion_components_with_templates

@inject IDbContextFactory<VokimiDbContext> dbContextFactory
@inject AuthHelperService authHelperService
@inject NavigationManager navigationManager
@inject IHttpContextAccessor httpContextAccessor


@attribute [Authorize]
@rendermode InteractiveServer

@page "/newtest"
@page "/newtest/{TestId}"

<PageTitle>New Test</PageTitle>

@if (string.IsNullOrEmpty(pageInitializationError)) {
    <CascadingValue Value="@parsedTestId.Value" Name="TestId">
        @switch (testTemplate) {
            case TestTemplate.Generic:
                <GenericTestCreationComponent SetPageInitError="(err)=>pageInitializationError=err" />
                break;
            case TestTemplate.Knowledge:
                <KnoweldgeTestCreationComponent />
                break;
            default:
                <div class="error-component">Unknown Error</div>
                break;
        }
    </CascadingValue>

}
else {
    <div class="error-component">@pageInitializationError</div>
}

@code {
    [Parameter] public string TestId { get; set; } = string.Empty;

    private string pageInitializationError = string.Empty;
    private DraftTestId? parsedTestId = null;
    private TestTemplate testTemplate;


    protected override async Task OnInitializedAsync() {

        pageInitializationError = string.Empty;

        if (!Guid.TryParse(TestId, out Guid parsedGuid)) {
            pageInitializationError = "Invalid test ID format.";
            return;
        }
        parsedTestId = new(parsedGuid);

        AppUserId? userId = authHelperService.GetUserIdFromClaims(httpContextAccessor.HttpContext.User);
        if (userId is null) {
            pageInitializationError = "An error has occurred. Try to log out of your account and log in again.";
            return;
        }

        using (var db = dbContextFactory.CreateDbContext()) {
            var test = await db.DraftTestsSharedInfo.FirstOrDefaultAsync(t => t.Id == parsedTestId.Value);
            if (test is null) {
                pageInitializationError = "Test not found";
            }
            else if (test.CreatorId != userId) {
                pageInitializationError = "You don't have access to this test";
            }
            else { testTemplate = test.Template; }

        }
    }
}


