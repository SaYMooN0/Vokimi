@using Vokimi.Components.Pages.TestsCreation.test_overview_components.areas_shared_components

@inject TestsCreationDbOperationsService testsCreationDbOperationsService
@inject VokimiStorageService vokimiStorageService

<ActionConfirmationDialog @ref="confirmationDialogRef"
                          ConfirmButtonText="Delete" />

@if (AnyConclusionAdded) {
    <AreaHeader LabelText="Test Conclusion: Added">
        <AreaIcon>
            <svg viewBox="0 0 24 24" fill="none">
                <path d="M5 14.5C5 14.5 6.5 14.5 8.5 18C8.5 18 14.0588 8.83333 19 7" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
            </svg>
        </AreaIcon>
        <RightSideContent>
            <div class="conclusion-actions-container">
                <div class="edit-btn" @onclick="ChangePageStateToConclusionEditing">
                    Edit Conclusion
                </div>
                <div class="remove-btn"
                     @onclick='()=>confirmationDialogRef.Open("Do you really want to remove test conclusion?",DeleteConclusion)'>
                    Remove
                </div>
            </div>
        </RightSideContent>
    </AreaHeader>
}
else {

    <div class="conclusion-area-content">
        <label>Test Conclusion(Optional):</label>
        <div class="add-conclustion-btn" @onclick="ChangePageStateToConclusionEditing">
            Add
            <svg viewBox="0 0 24 24" fill="none">
                <path d="M12 8V16M16 12L8 12" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                <path d="M2.5 12C2.5 7.52166 2.5 5.28249 3.89124 3.89124C5.28249 2.5 7.52166 2.5 12 2.5C16.4783 2.5 18.7175 2.5 20.1088 3.89124C21.5 5.28249 21.5 7.52166 21.5 12C21.5 16.4783 21.5 18.7175 20.1088 20.1088C18.7175 21.5 16.4783 21.5 12 21.5C7.52166 21.5 5.28249 21.5 3.89124 20.1088C2.5 18.7175 2.5 16.4783 2.5 12Z" stroke="currentColor" stroke-width="1.5" />
            </svg>
        </div>
    </div>

}

@code {
    private ActionConfirmationDialog confirmationDialogRef;

    [CascadingParameter(Name = "TestId")] public DraftTestId TestId { get; set; }
    [Parameter] public bool AnyConclusionAdded { get; set; }
    [Parameter] public Action ChangePageStateToConclusionEditing { get; set; }

    private void EditConclusion() { }
    private async Task<Err> DeleteConclusion() {
        Err dbDelitingErr = await testsCreationDbOperationsService.RemoveDraftTestConclusion(TestId);
        if (dbDelitingErr.NotNone()) {
            return dbDelitingErr;
        }
        await vokimiStorageService.ClearDraftTestConclusionUnusedImages(TestId);
        AnyConclusionAdded = false;
        StateHasChanged();
        return Err.None;
    }
}
