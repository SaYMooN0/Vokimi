@using Vokimi.Components.Pages.TestsCreation.page_states.shared_components
@using Vokimi.Components.Pages.TestsCreation.styles_editing_components

@inject IDbContextFactory<VokimiDbContext> dbContextFactory

<TestCreationPageStateTopLabel LabelText="Styles Editing" BackToOverviewAction="BackToOverviewAction" />
<form class="styles-editing-form" name="formData" @onsubmit="HandleSubmit">
    <AccentColorPicker @bind-ChosenAccentColor="formData.AccentColor" />
    <ArrowTypeChoosingComponent @bind-ChosenType="formData.ArrowsType" />
    <p class="error-message">@errorMessage</p>
    <button class="save-btn" type="submit">Save</button>
</form>


@code {
    [Parameter] public Action BackToOverviewAction { get; set; }
    [CascadingParameter(Name = "TestId")] public DraftTestId TestId { get; set; }

    private TestStylesEditingForm formData { get; set; } = new();
    private string errorMessage { get; set; }

    protected override async Task OnInitializedAsync() {
        using (VokimiDbContext dbContext = dbContextFactory.CreateDbContext()) {
            BaseDraftTest? test = await dbContext.DraftTestsSharedInfo.FirstOrDefaultAsync(x => x.Id == TestId);
            if (test is null) {
                formData = TestStylesEditingForm.Default;
                errorMessage = "Unable to find styles for test";
            }
            else {
                formData = TestStylesEditingForm.FromTestStylesSheet(test.StylesSheet);
                errorMessage = string.Empty;
            }
        }

    }

    private async void HandleSubmit() {
        errorMessage = string.Empty;
        using (VokimiDbContext dbContext = dbContextFactory.CreateDbContext()) {
            Err serverErr = await BaseTestsCreationDbOperations.UpdateStylesForDraftTest(dbContext, TestId, formData);
            if (serverErr.NotNone()) {
                errorMessage = serverErr.Message;
                StateHasChanged();
                return;
            }
        }


    }
}
