@using Vokimi.Components.Pages.TestsCreation.test_overview_areas

@rendermode InteractiveServer

<div class="state-container">
    <div class="main-info-and-cover-section">
        <div class="main-info-area">
            <label class="area-title">Test Main Info</label>
            <MainInfoAreaContent Vm="vm" GoToMainInfoEditing="() => ChangePageState.InvokeAsync(TestCreationPageState.MainInfoEditing)" />
        </div>
        <div class="test-cover-area">
            <label class="area-title">Test Cover</label>
            <TestCoverAreaContent Vm="vm" MainInfoId="Test.MainInfo.Id" TestId="Test.Id" />
        </div>
    </div>

    <div class="questions-area">
        <label class="questions-count-label">Number of questions: @vm.Questions.Count</label>
        @foreach (var q in vm.Questions) {
            <div class="question-view-component">
                <p class="question-text">@q.Text</p>
                <label class="answers-count">Answers count: @q.AnswersCount (@(q.IsMultiAnswer ? "Multi-Answer" : "Single-Answer"))</label>
            </div>
        }
        <button class="go-to-questions-btn" @onclick="() => ChangePageState.InvokeAsync(TestCreationPageState.AllQuestionsOverview)">
            See All Questions
        </button>
    </div>
    <div class="conclusion-area">
        Add Test Conclusion(Optional)
        <button>Add</button>
    </div>
    <div class="styles-area">
        Change Test Styles(Optional)
        <button>Change</button>
    </div>
</div>

@code {
    private TestCreationOverviewViewModel vm { get; set; }

    [Parameter]
    public DraftGenericTestDto Test { get; set; }
    [Parameter]
    public EventCallback<TestCreationPageState> ChangePageState { get; set; }

    protected override void OnParametersSet() {
        base.OnParametersSet();
        vm = TestCreationOverviewViewModel.FromTestDto(Test);
    }




}
