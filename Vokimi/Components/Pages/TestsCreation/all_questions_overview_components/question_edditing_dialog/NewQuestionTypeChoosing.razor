<div class="content">
    <label class="text-label">Enter the text of the question (it can be changed later)</label>
    <input @bind="questionText" placeholder="Question text" name="@Guid.NewGuid()" class="question-text-input" />

    <label class="choose-type-label">Choose Answers Type:</label>
    <select @bind="answersType">
        @foreach (var t in Enum.GetValues(typeof(AnswersType))) {
            <option value="@t">@t</option>
        }
    </select>

    <label class="server-message">@serverMessage</label>
    <div class="bottom-btns-container">
        <div class="cancel-btn" @onclick="CancelAction">Cancel</div>
        <div class="continue-btn" @onclick="goToEditingState">Continue</div>
    </div>

</div>

@code {
    private string serverMessage { get; set; }
    private string questionText { get; set; }
    private AnswersType answersType { get; set; } = AnswersType.TextOnly;

    [Parameter] public Action CancelAction { get; set; }
    [Parameter] public Action<string, AnswersType> GoToNextStageAction { get; set; }

    private void goToEditingState() {
        if (string.IsNullOrEmpty(questionText)) {
            serverMessage = "Question text cannot be empty";
            return;
        }
        GoToNextStageAction?.Invoke(questionText, answersType);
    }

}
