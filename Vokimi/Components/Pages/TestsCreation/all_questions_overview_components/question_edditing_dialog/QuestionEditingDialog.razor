<BaseDialog DialogId="question-editing-dialog" @ref="baseDialogRef">
    @if (isTypeChoosingState) {
        <NewQuestionTypeChoosing CancelAction="()=>{Close();}" TestId="@testId"
                                 GoToNextStageAction="()=>{isTypeChoosingState = false; StateHasChanged();}" />
    }
    else {
        <div class="dialog-content">
            <label class="question-text-label"></label>
        </div>
        <div class="bottom-btns-container">
            <div class="cancel-btn" @onclick="Close">Cancel</div>
            <div class="save-btn">Save</div>
        </div>
    }

</BaseDialog>
@code {
    private BaseDialog baseDialogRef;
    private bool isTypeChoosingState = true;
    private QuestionEditingForm data;


    [Parameter] public AppUserId creatorId { get; set; }
    [Parameter] public DraftTestId testId { get; set; }

    public async Task NewQuestion() {
        isTypeChoosingState = true;
        data = QuestionEditingForm.NewDefault();
        await baseDialogRef.OpenAsync();

    }

    public async Task EditQuestion(DraftTestQuestionId questionId) {
        isTypeChoosingState = false;
        // data = quesionInfo;
        //from db
        await baseDialogRef.OpenAsync();
    }

    private async Task Close() => await baseDialogRef.CloseAsync();
}
