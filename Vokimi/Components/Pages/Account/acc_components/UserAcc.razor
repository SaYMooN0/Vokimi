@inject NavigationManager navigationManager
@inject AuthHelperService authHelperService
@inject IDbContextFactory<VokimiDbContext> dbContextFactory

<h3>User Acc</h3>
<h4>
    @System.Text.Json.JsonSerializer.Serialize(vm);
</h4>
@code {
    private UserAccountPageViewModel vm;

    [Parameter]
    public AppUserId PageOwnerId { get; set; }
    [CascadingParameter]
    public HttpContext httpContext { get; set; }

    protected override async Task OnParametersSetAsync() {
        using (var db = dbContextFactory.CreateDbContext()) {
            AppUser? pageOwner = await db.AppUsers.FirstOrDefaultAsync(u => u.Id == PageOwnerId);
            if (pageOwner is null)
                navigationManager.NavigateTo("/acc/notfound", true);
            else if (pageOwner.IsAccountPrivate)
                navigationManager.NavigateTo("/acc/" + pageOwner.Id.ToString(), true);
            else {
                AppUserId? viewerId = authHelperService.GetUserIdFromClaims(httpContext.User);
                vm = UserAccountPageViewModel.FromUser(pageOwner, viewerId);
            }
        }
    }
}
