@inject UsersDbOperationsService usersDbOperationsService
@inject NavigationManager navigationManager
@inject AuthHelperService authHelperService

<h3>User Acc</h3>
<h4>
    @System.Text.Json.JsonSerializer.Serialize(vm);
</h4>
@code {
    private PrivateAccountPageViewModel vm;

    [Parameter]
    public AppUserId PageOwnerId { get; set; }
    [CascadingParameter]
    public HttpContext httpContext { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        AppUser? pageOwner = await usersDbOperationsService.GetUserById(PageOwnerId);
        if (pageOwner is null)
            navigationManager.NavigateTo("/acc/notfound", true);
        else
        {
            AppUserId? viewerId = authHelperService.GetUserIdFromClaims(httpContext.User);
            vm = PrivateAccountPageViewModel.FromUser(pageOwner, viewerId);
        }
    }
}
