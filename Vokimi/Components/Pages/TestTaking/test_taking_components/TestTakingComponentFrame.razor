<div class="test-taking-container">
    <label class="question-number-label">@QuestionNumberText</label>

    <div class="current-question-content">
        <label class="question-text">@CurrentQuestionText</label>
        <div class="answers-content">
            @AnswersContent
        </div>
    </div>
    <p class="error-message">@errorMessage</p>
    <div class="prev-next-btns-container">
        <div class="prev-question-btn" @onclick="PrevButtonClicked">
            Previous
            <DynamicComponent Type="@ArrowsType.ArrowIconComponent(false)" />
        </div>
        <div class="next-question-btn" @onclick="NextButtonClicked">
            Next
            <DynamicComponent Type="@ArrowsType.ArrowIconComponent(true)" />
        </div>
    </div>
    <style>
        .arrow-icon {
            height: 100%;
            aspect-ratio: 1/1;
            color: white;
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
        }

        .prev-question-btn .arrow-icon {
            left: 0;
        }

        .next-question-btn .arrow-icon {
            right: 0;
        }
    </style>

</div>
@code {
    [Parameter] public ArrowIconType ArrowsType { get; set; }

    [Parameter] public RenderFragment AnswersContent { get; set; }
    [Parameter] public RenderFragment QuestionNumberText { get; set; }
    [Parameter] public RenderFragment CurrentQuestionText { get; set; }

    [Parameter] public Func<Err> GoToNextQuestion { get; set; }
    [Parameter] public Func<Err> GoToPreviousQuestion { get; set; }

    private string errorMessage = string.Empty;
    private void PrevButtonClicked() {
        errorMessage = string.Empty;
        Err err = GoToPreviousQuestion();
        if (err.NotNone()) {
            errorMessage = err.ToString();
        }
        StateHasChanged();
    }

    private void NextButtonClicked() {
        errorMessage = string.Empty;
        Err err = GoToNextQuestion();
        if (err.NotNone()) {
            errorMessage = err.ToString();
        }
        StateHasChanged();
    }
}