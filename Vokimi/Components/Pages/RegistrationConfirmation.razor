@using Microsoft.AspNetCore.WebUtilities



@page "/registration-confirmation"


@inject NavigationManager navigationManager
@inject UsersDbOperationsService usersDbOperationsService

<div class="confiramtion-container">

    <h3>Registration Confirmation</h3>
    @if (registrationConfirmed)
    {
        <label>
            Registration successfully confirmed
        </label>
    }
    else
    {
        <label class="error-message">@serverMessage</label>
    }

</div>


@code {
    private bool registrationConfirmed { get; set; } = false;
    private string serverMessage { get; set; }
    private string email { get; set; } = null;
    private string code { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        registrationConfirmed = false;
        var uri = navigationManager.ToAbsoluteUri(navigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("email", out var e))
            email = e;

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("code", out var c))
            code = c;

        if (string.IsNullOrEmpty(email) || string.IsNullOrEmpty(code))
            serverMessage = "Try to reload the page. If that doesn't help, try registering again";
        else if (await usersDbOperationsService.IsEmailTaken(email))
            serverMessage = "Email is already confirmed. Please use authorization form to log in";
        if (!string.IsNullOrEmpty(serverMessage))
        {
            StateHasChanged();
            return;
        }
        Err serverError = await usersDbOperationsService.TryToConfirmUser(email, code);
        if (serverError.NotNone())
            serverMessage = serverError.Message;
        else
            registrationConfirmed = true;
        StateHasChanged();


    }
}
