@inject IHttpContextAccessor httpContextAccessor
@inject AuthHelperService authHelperService
@inject NavigationManager navigationManager
@inject UsersDbOperationsService usersDbOperationsService

<TestsViewSection SectionLabel=@($"Draft Tests ({draftTestsCount})")>
    <div class="test-vms-container">
        @if (draftTests is not null && draftTests.Length > 0) {
            @foreach (var draftTestVm in draftTests) {
                <DraftTestViewComponent Vm="draftTestVm" />
            }

            @if (draftTestsCount > testPackageCount) {
                <div class="see-all-btn">See all</div>
            }
        }
        else {
            <label class="no-draft-test">You have no draft tests</label>
        }
    </div>
</TestsViewSection>

<TestsViewSection SectionLabel=@($"Created Tests ({createdTestsCount})")>
    <div class="test-vms-container">
    </div>
</TestsViewSection>

<button>My Tests Statistic</button>

<div class="create-test-button" @onclick="OpenTemplateChoosingDialog">Create New</div>

<NewTestTemplateChoosingDialog @ref="newTestTemplateChoosingDialogRef" />

@code {
    private int draftTestsCount = 0;
    private int createdTestsCount = 0;
    private int testPackageCount = 4;


    private DraftTestViewModel[] draftTests = [];
    private List<DraftTestViewModel> userTests = new();
    private NewTestTemplateChoosingDialog newTestTemplateChoosingDialogRef;

    protected override async Task OnInitializedAsync() {
        base.OnInitialized();
        AppUserId? appUserId = authHelperService.GetUserIdFromClaims(httpContextAccessor.HttpContext.User);
        if (appUserId is null) {
            navigationManager.NavigateTo("/login");
            return;
        }
        AppUser? user = await usersDbOperationsService.GetUserById(appUserId.Value);
        if (user is null) {
            navigationManager.NavigateTo("/login");
            return;
        }
        draftTestsCount = user.DraftTests.Count();
        draftTests = user.DraftTests
            .Take(testPackageCount)
            .Select(t => DraftTestViewModel.FromTest(t))
            .ToArray();
        // userTests=
    }
    public async void OpenTemplateChoosingDialog() {
        if (newTestTemplateChoosingDialogRef is not null)
            await newTestTemplateChoosingDialogRef.Open();
    }
}

